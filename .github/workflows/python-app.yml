  
name: Build CI
on: push

jobs:
  # Label of the container job
  container-job:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest


    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      db:
        # Docker Hub image
        image: postgres
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5480:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install Python dependencies
        uses: py-actions/py-dependency-install@v4
        with:
          path: "requirements.txt"
          update-pip: "false"
          update-setuptools: "false"
          update-wheel: "false"

          
      - name: Start containers
        run: |
          docker-compose down
          docker-compose -f "docker-compose.yml" up -d --build
        shell: bash
        
      - name: Run Tests
        env:
            DEBUG: ${{ secrets.DEBUG }}
            SECRET_KEY: ${{ secrets.SECRET_KEY }}
            POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
            POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
            POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
            POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
            DATABASE_URL: 'postgres://postgres:postgres@127.0.0.1:5480/postgres'
        run: python manage.py test
        
      - uses: Klemensas/action-autotag@stable
        with:
          tag_prefix: "v"
          GITHUB_TOKEN: "${{ secrets.TOKEN }}"




