  
name: Build CI
on: push

env:
  PROJECT_ID: ${{ secrets.GOOGLE_ID }}
  SERVICE: ci-2023
  REGION: YOUR_SERVICE_REGION

jobs:
  # Label of the container job
  Workflow:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      database:
        # Docker Hub image
        image: postgres
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install Python dependencies
        uses: py-actions/py-dependency-install@v4
        with:
          path: "requirements.txt"
          update-pip: "false"
          update-setuptools: "false"
          update-wheel: "false"

          
      - name: Start containers
        run: |
          docker-compose down
          docker-compose -f "docker-compose.yml" up -d --build
        shell: bash
        
      - name: Run Tests
        env:
            DEBUG: ${{ secrets.DEBUG }}
            SECRET_KEY: ${{ secrets.SECRET_KEY }}
            POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
            POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
            POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
            POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
            DATABASE_URL: 'postgres://postgres:postgres@127.0.0.1:5432/postgres'
        run: python manage.py test --database=workflow
        
      - uses: Klemensas/action-autotag@stable
        with:
          tag_prefix: "v"
          github_token: ${{ secrets.TOKEN }}

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider
          service_account: my-service-account@my-project.iam.gserviceaccount.com

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Authorize Docker push
        run: gcloud auth configure-docker

      - name: Build and Push Container
        run: |
          -docker build -t gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }} .
                docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }}

      - name: Deploy to Cloud Run
        run: |
           - gcloud run deploy ${{ env.SERVICE }} \
             --region ${{ env.REGION }} \
                  --image gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }} \
                  --platform "managed" \
                  --quiet




